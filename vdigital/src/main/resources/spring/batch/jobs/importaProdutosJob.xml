<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/batch
						   http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
						   http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- xmlns 'inline' para evitar namespaces como 'batch:job', 'batch:step',... -->
	<job id="importaProdutosJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="importaProdutos">
			<tasklet>
				<chunk reader="itemReader" writer="itemWriter" commit-interval="2" />
			</tasklet>
		</step>
	</job>

	<bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['inputResource']}" />
		<property name="linesToSkip" value="1"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="oid,nome,quantidadeDepo,valorCompra,valorVenda,pontoReposicao,quantMaxGondola,quantMinGondola" />
						<property name="delimiter" value="," />	
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.br.projetandoo.vdigital.spring.batch.ProdutoFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="itemWriter" class="com.br.projetandoo.vdigital.spring.batch.ProdutoItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>

</beans>