<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		                   http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		                   http://www.springframework.org/schema/beans
		                   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- xmlns 'inline' para evitar namespaces como 'batch:job', 'batch:step',... -->
	<job id="importaRelatorioFinanceiroJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="importaRelatorioFinanceiroStep">
			<tasklet>
				<chunk reader="produtoItemReader"
					processor="produtoItemProcessor" 
					writer="produtoItemWriter"
					commit-interval="10"
					skip-limit="999999">
					<streams>
          				<stream ref="errorItemWriter"/>
        			</streams>				
					<skippable-exception-classes>
          				<include class="" />
          				<include class="" />
        			</skippable-exception-classes>
				</chunk>
				<listeners>
					<listener ref="produtoItemLogger" />
					<listener ref="skipListener" />
				</listeners>	
			</tasklet>
		</step>
	</job>
	
	<bean id="produtoItemLogger"
		class="com.br.projetandoo.vdigital.spring.batch.ProdutoListener" />
		
	<bean id="skipListener" class="com.br.projetandoo.vdigital.spring.batch.ProdutoSkipListener"
      resource-ref="errorItemWriter"/>
      
    <bean id="errorItemWriter"
      class="org.springframework.batch.item.file.FlatFileItemWriter">
      <property name="resource" ref="" />
      <property name="shouldDeleteIfExists=" value="true" />
      <property name="lineAggregator">
		  <bean	class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<property name="delimiter" value="|" />
			<property name="fieldExtractor">
			  <bean	class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
				<property name="names" value="nome, codigo, volume, valorVenda, valorCusto" />
			  </bean>
			</property>
		  </bean>
	  </property>
    </bean>
      
    <bean id="arquivoErroSaida" class="org.springframework.core.io.FileSystemResource" scope="step">
  	  <constructor-arg value="resource/data/errors.txt"/>
	</bean>  

	<bean id="arquivoEntrada" class="org.springframework.core.io.FileSystemResource" scope="step">
		<constructor-arg value="#{jobParameters[inputFile]}" />
	</bean>

	<bean id="produtoItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource" ref="arquivoEntrada" />
		<property name="linesToSkip" value="10" />
		<!-- <property name="comments">
			<list>
				<value>/.MARKAO/g</value>
			</list>
		</property> 
		<property name="recordSeparatorPolicy" ref="blankLineRecordSeparatorPolicy" /> -->
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="nome, codigo, volume, valorVenda, valorCusto" />
						<property name="columns" value="1-42,45-50,65-70,89-98,115-124" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.br.projetandoo.vdigital.spring.batch.ProdutoPrecosFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="produtoItemProcessor"
		class="com.br.projetandoo.vdigital.spring.batch.ProdutoItemProcessor"
		scope="step">
	</bean>
	
	<bean id="produtoItemWriter"
		class="org.springframework.batch.item.data.RepositoryItemWriter">
		<property name="repository" ref="produtoRepository" />
		<property name="methodName" value="save" />
	</bean>
	
	<bean id="produtoRepository" class="com.br.projetandoo.vdigital.repository.ProdutoRepository" />
	
</beans>